<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>C on Tech Log</title>
    <link>https://msl9204.github.io/tags/c/</link>
    <description>Recent content in C on Tech Log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Jul 2022 18:14:48 +0900</lastBuildDate><atom:link href="https://msl9204.github.io/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>소켓과 파일디스크립터</title>
      <link>https://msl9204.github.io/posts/file-descriptor/</link>
      <pubDate>Sat, 16 Jul 2022 18:14:48 +0900</pubDate>
      
      <guid>https://msl9204.github.io/posts/file-descriptor/</guid>
      <description>회사에서 C 기반의 TCP Client를 구현해야 할 일이 생겨서 소켓의 동작방식을 자세히 알아보게 되었다. 그런데 socket에 대해 알아보기 전에 먼저 file descriptor에 대해 알아볼 필요가 있다.
File Descriptor란? 파일 서술자라고 부르며 프로세스가 생성될 때 프로세스 만의 File Descriptor Table이 생성되고, 테이블에는 3개의 기본 표준 입출력 file descriptor (이하 fd)이 생성된다.
정수값 이름 0 표준 입력 (stdin) 1 표준 출력 (stdout) 2 표준 오류 (stderr) 이 3개의 입출력은 흔히 터미널에서 ps -ef | grep [something] 처럼 사용하는 파이프를 이용한 명령어나 프로세스 실행 시, nohup a.</description>
    </item>
    
  </channel>
</rss>
